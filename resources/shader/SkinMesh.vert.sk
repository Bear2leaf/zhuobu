#version 300 es
layout(location = 0) in vec4 a_position;
layout(location = 1) in vec3 a_color;
layout(location = 2) in vec2 a_texcoord;
layout(location = 3) in vec3 a_normal;
layout(location = 4) in vec4 a_weight;
layout(location = 5) in uvec4 a_joint;


uniform ViewProjection {
    mat4 u_view;
    mat4 u_projection;
};

uniform mat4 u_world;

uniform sampler2D u_jointTexture;

out vec3 v_normal;

mat4 getBoneMatrix(uint jointNdx) {
  return mat4(
    texelFetch(u_jointTexture, ivec2(0, jointNdx), 0),
    texelFetch(u_jointTexture, ivec2(1, jointNdx), 0),
    texelFetch(u_jointTexture, ivec2(2, jointNdx), 0),
    texelFetch(u_jointTexture, ivec2(3, jointNdx), 0));
}
void main() {
  mat4 skinMatrix = getBoneMatrix(a_joint[0]) * a_weight[0] +
                    getBoneMatrix(a_joint[1]) * a_weight[1] +
                    getBoneMatrix(a_joint[2]) * a_weight[2] +
                    getBoneMatrix(a_joint[3]) * a_weight[3];
  mat4 world = u_world * skinMatrix;
  gl_Position = u_projection * u_view * world * a_position;
  v_normal = mat3(world) * a_normal;
  // for debugging .. see article
  // gl_Position = u_projection * u_view *  a_position;
  // v_normal = a_normal;
  // v_normal = a_weights.xyz * 2. - 1.;
  // v_normal = vec3(a_joints.xyz) / float(textureSize(u_jointTexture, 0).y - 1) * 2. - 1.;

}
